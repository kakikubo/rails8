name: Build

#プルリクエスト作成時に実行(他にもpush時など設定できます)
on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: rails8-${{ github.event.pull_request.head.ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  rspec-job:
    #ubuntu環境で動かします
    runs-on: ubuntu-latest
    timeout-minutes: 7
    env:
      RAILS_ENV: test
      ELASTIC_SEARCH_URL: http://127.0.0.1:9200
      # ELASTIC_SEARCH_URL: http://127.0.0.1:${{ job.services.elasticsearch.ports[9200] }}

    services:
      mysql:
        image: mysql:9.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
      # elasticsearch:
      #   # image: elasticsearch:7.17.9
      #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
      #   ports:
      #     - 9200:9200
      #   env:
      #     discovery.type: single-node
      #   options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
      #   options: >-
      #     --health-cmd 'curl http://localhost:9200/_cluster/health'
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 3
      # 起動数が多すぎるせいか rspec が動かなくなるので一旦停止させたサービス

    # https://github.com/ruby/setup-ruby
    steps:
      - uses: Kesin11/actions-timeline@v2
        with:
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          show-waiting-runner: true
      - name: checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v5
      - name: checkout pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Ruby version
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .tool-versions
          bundler-cache: true
      - name: Use Node.js 22.19.0
        uses: actions/setup-node@v5
        with:
          node-version: 22.19.0
          package-manager-cache: false
      # elasticsearch起動用に必要
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Run Elasticsearch
        uses: perfect-ruby-on-rails/elasticsearch-with-plugins-action@v1
        #  uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.17.9
          plugins: |
            analysis-kuromoji
            analysis-icu
      #MySQLをインストール
      - name: Install dependent libralies
        run: sudo apt-get update -y && sudo apt-get install libmysqlclient-dev
      - name: Verify Elasticsearch connection from host
        run: |
          echo "${ELASTIC_SEARCH_URL}"
          curl -fsSL "${ELASTIC_SEARCH_URL}/_cat/health?h=status"
      #     curl -X GET "$ELASTIC_SEARCH_URL/_nodes/plugins?pretty"
      - name: Setup bundler
        run: gem install bundler

      - name: bundle install
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup node env 🧱
        uses: actions/setup-node@v5
        with:
          node-version-file: '.tool-versions'
          cache: 'pnpm'
      - name: Install dependencies 👨🏻‍💻
        shell: bash
        run: pnpm install --frozen-lockfile
      - name: pnpm build
        run: bundle exec rails assets:precompile

      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create
          bundle exec rake db:migrate
          # bundle exec rake db:schema:load

      - name: Run Brakeman
        run: bundle exec brakeman

      - name: Run RSpec
        run: |
          bundle exec rspec

      - name: Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage # このディレクトリに、テスティングツールによるカバレッジレポートファイルが出力される想定
